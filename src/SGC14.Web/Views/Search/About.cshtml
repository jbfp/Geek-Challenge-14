@{
    const string title = "About My SGC14 Entry (Cascade)";
}

<!DOCTYPE html>
<html>
<head>
    <title>@title</title>
    <meta charset="UTF-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:300italic,300,700,400,600' rel='stylesheet' type='text/css'>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-theme.min.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/about.min.css" rel="stylesheet" />
    <script type="text/javascript">
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-12975236-2', 'auto');
        ga('send', 'pageview');
    </script>
</head>
<body>
    <div class="container-fluid" role="main">
        <div class="row">
            <div class="col-xs-12 col-lg-6">
                <article>
                    <header class="page-header">
                        <h1>@title</h1>
                    </header>

                    <section>
                        <h3>Server-side</h3>

                        <p>
                            My SGC14 entry is written in <a href="http://msdn.microsoft.com/en-us/vstudio/hh341490.aspx" target="_blank">C#</a>, using <a href="http://www.asp.net/mvc" target="_blank">ASP.NET MVC</a> as basic web framework including Twitter authentication, and with <a href="http://www.elasticsearch.org/" target="_blank">elasticsearch</a> (NoSQL based on <a href="https://lucene.apache.org/core/" target="_blank">Apache Lucene</a>) as data store. It makes it pretty easy to both index the data (persiting it) and getting it back through search.
                            The choice of libraries include <a href="http://msdn.microsoft.com/en-us/data/gg577609.aspx" target="_blank">Reactive Extensions (Rx)</a> to represent asynchronous data streams (e.g. Twitter streams) and composing them into kind of pipeline of data to the client, and <a href="http://signalr.net/" target="_blank">ASP.NET SignalR</a> for "real-time" web functionality for pushing said streams of data to the client.
                        </p>
                        
                        <p>
                            During development I used <a href="http://www.visualstudio.com/en-us/products/tfs-overview-vs.aspx" target="_blank">TFS</a> for source-control (I will share the code on Github if possible/allowed)
                            For unit testing I used <a href="http://www.nunit.org/" target="_blank">NUnit</a> and <a href="https://github.com/Moq/moq4" target="_blank">Moq</a>.
                        </p>

                        <p>
                            <a href="http://www.microsoft.com/en-us/server-cloud/products/sql-server/" target="_blank">Microsoft SQL Server</a> is used for managing authentication data - the entire project is hosted on <a href="http://azure.microsoft.com" target="_blank">Microsoft Azure</a>.
                        </p>

                        <hr />

                        <h3>Client-side</h3>
                        
                        <p>
                            I started out using regular JavaScript but it quickly became unwieldy so I migrated to <a href="http://www.typescriptlang.org/" target="_blank">TypeScript</a> instead.
                        </p>

                        <p>
                            <a href="http://getbootstrap.com/" target="_blank">Bootstrap</a> for pretty (and easy) styling, <a href="https://angularjs.org/" target="_blank">AngularJS</a> for client-side MVC, a tiny amount of <a href="https://jquery.com/" target="_blank">jQuery</a>, <a href="https://fortawesome.github.io/Font-Awesome/" target="_blank">Font Awesome</a>, <a href="http://www.chartjs.org/" target="_blank">Chart.js</a> for charts, and <a href="http://isotope.metafizzy.co/" target="_blank">Isotope</a> for laying out the
                            tweets, movies, books, and links in an awesome way (I like to call it a waterfall or cascade.)
                        </p>
                        
                        <small>The wonderful website icons were made by <a href="http://www.iconarchive.com/artist/martz90.html" target="_blank">Martz90</a>.</small>

                        <hr />

                        <h3>Data sources used:</h3>
                        <ul>
                            <li>
                                <a href="https://dev.twitter.com/" target="_blank">
                                    <i class="fa fa-twtr"></i> Twitter
                                </a>
                                <ul>
                                    <li>
                                        <a href="https://dev.twitter.com/rest/reference/get/search/tweets" target="_blank">
                                            <i class="fa fa-search"></i> Search
                                        </a>
                                    </li>
                                    <li>
                                        <a href="https://dev.twitter.com/streaming/reference/post/statuses/filter" target="_blank">
                                            <i class="fa fa-filter"></i> Filtered stream
                                        </a> (unfortunately Twitter does not "filter" out explicit tweets as well as the regular search, so once in a while a few undesirable items can pop up)
                                    </li>
                                </ul>
                            </li>
                            <li>
                                <a href="http://dbpedia.org" target="_blank">
                                    <i class="fa fa-wordpress"></i> Dbpedia
                                </a>
                                (structured Wikipedia data)
                            </li>
                            <li>
                                <a href="https://www.themoviedb.org/documentation/api" target="_blank">
                                    <i class="fa fa-video-camera"></i> themoviedb.org
                                </a>
                                (movies and TV-shows)
                            </li>
                            <li>
                                <a href="https://www.goodreads.com/api" target="_blank">
                                    <i class="fa fa-book"></i> Goodreads
                                </a>
                                (books)
                            </li>
                            <li>
                                <a href="https://www.flickr.com/services/api/" target="_blank">
                                    <i class="fa fa-camera"></i> Flickr
                                </a>
                                (images, try searching for #sunset or #sunrise)
                            </li>
                        </ul>

                        The tweets are parsed for links to other pages, which are in turn parsed as well to extract title and description (like articles) to provide a quick overview.
                        Included in tweets are also links to images, which are also displayed.
                    </section>

                    <hr />

                    <h3>Contact</h3>
                    <address>
                        Author: <a href="mailto:jakobp10@gmail.com">Jakob Pedersen <i class="fa fa-envelope-o"></i></a><br />
                        I am a student at <a href="http://www.eal.dk/" target="_blank">EAL Vejle (Datamatiker)</a><br />
                        <em>
                            Find me on <a href="https://github.com/jbfp" rel="Portfolio">Github</a>, <a href="https://twitter.com/jbfp10" rel="Social media">Twitter</a>, <a href="https://dk.linkedin.com/pub/jakob-bo-frost-pedersen/4b/a82/835/" rel="CV">LinkedIn</a>
                        </em>
                    </address>
                </article>

                @Html.ActionLink("Go back", "Search", "Search")
            </div>
        </div>
    </div>
</body>
</html>